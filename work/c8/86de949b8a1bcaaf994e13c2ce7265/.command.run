#!/bin/bash
# NEXTFLOW TASK: AMRNANOPRO:MULTIQC
set -e
set -u
NXF_DEBUG=${NXF_DEBUG:=0}; [[ $NXF_DEBUG > 1 ]] && set -x
NXF_ENTRY=${1:-nxf_main}

nxf_container_env() {
cat << EOF
export PYTHONNOUSERSITE="1"
export R_PROFILE_USER="/.Rprofile"
export R_ENVIRON_USER="/.Renviron"
export JULIA_DEPOT_PATH="/usr/local/share/julia"
export PATH="\$PATH:/home/sequser/amrnanopro/bin"
EOF
}

nxf_sleep() {
  sleep $1 2>/dev/null || sleep 1;
}

nxf_date() {
    local ts=$(date +%s%3N);
    if [[ ${#ts} == 10 ]]; then echo ${ts}000
    elif [[ $ts == *%3N ]]; then echo ${ts/\%3N/000}
    elif [[ $ts == *3N ]]; then echo ${ts/3N/000}
    elif [[ ${#ts} == 13 ]]; then echo $ts
    else echo "Unexpected timestamp value: $ts"; exit 1
    fi
}

nxf_env() {
    echo '============= task environment ============='
    env | sort | sed "s/\(.*\)AWS\(.*\)=\(.\{6\}\).*/\1AWS\2=\3xxxxxxxxxxxxx/"
    echo '============= task output =================='
}

nxf_kill() {
    declare -a children
    while read P PP;do
        children[$PP]+=" $P"
    done < <(ps -e -o pid= -o ppid=)

    kill_all() {
        [[ $1 != $$ ]] && kill $1 2>/dev/null || true
        for i in ${children[$1]:=}; do kill_all $i; done
    }

    kill_all $1
}

nxf_mktemp() {
    local base=${1:-/tmp}
    mkdir -p "$base"
    if [[ $(uname) = Darwin ]]; then mktemp -d $base/nxf.XXXXXXXXXX
    else TMPDIR="$base" mktemp -d -t nxf.XXXXXXXXXX
    fi
}

nxf_fs_copy() {
  local source=$1
  local target=$2
  local basedir=$(dirname $1)
  mkdir -p $target/$basedir
  cp -fRL $source $target/$basedir
}

nxf_fs_move() {
  local source=$1
  local target=$2
  local basedir=$(dirname $1)
  mkdir -p $target/$basedir
  mv -f $source $target/$basedir
}

nxf_fs_rsync() {
  rsync -rRl $1 $2
}

nxf_fs_rclone() {
  rclone copyto $1 $2/$1
}

nxf_fs_fcp() {
  fcp $1 $2/$1
}

on_exit() {
    exit_status=${nxf_main_ret:=$?}
    printf $exit_status > /home/sequser/amrnanopro/work/c8/86de949b8a1bcaaf994e13c2ce7265/.exitcode
    set +u
    [[ "$tee1" ]] && kill $tee1 2>/dev/null
    [[ "$tee2" ]] && kill $tee2 2>/dev/null
    [[ "$ctmp" ]] && rm -rf $ctmp || true
    docker rm $NXF_BOXID &>/dev/null || true
    sync || true
    exit $exit_status
}

on_term() {
    set +e
    docker kill $NXF_BOXID
}

nxf_launch() {
    docker run -i --cpu-shares 1024 --memory 6144m -u $(id -u) -e "HOME=${HOME}" -v /etc/passwd:/etc/passwd:ro -v /etc/shadow:/etc/shadow:ro -v /etc/group:/etc/group:ro -v $HOME:$HOME -v /home/sequser/amrnanopro:/home/sequser/amrnanopro -w "$PWD" --name $NXF_BOXID quay.io/biocontainers/multiqc:1.21--pyhdfd78af_0 /bin/bash -c "eval $(nxf_container_env); /bin/bash -euo pipefail /home/sequser/amrnanopro/work/c8/86de949b8a1bcaaf994e13c2ce7265/.command.sh"
}

nxf_stage() {
    true
    # stage input files
    rm -f 1/NanoStats.txt
    rm -f 2/LengthvsQualityScatterPlot_dot.html
    rm -f 3/LengthvsQualityScatterPlot_kde.html
    rm -f 4/NanoPlot-report.html
    rm -f 5/Non_weightedHistogramReadlength.html
    rm -f 6/Non_weightedLogTransformed_HistogramReadlength.html
    rm -f 7/WeightedHistogramReadlength.html
    rm -f 8/WeightedLogTransformed_HistogramReadlength.html
    rm -f 9/Yield_By_Length.html
    rm -f 10/LengthvsQualityScatterPlot_dot.png
    rm -f 11/LengthvsQualityScatterPlot_kde.png
    rm -f 12/Non_weightedHistogramReadlength.png
    rm -f 13/Non_weightedLogTransformed_HistogramReadlength.png
    rm -f 14/WeightedHistogramReadlength.png
    rm -f 15/WeightedLogTransformed_HistogramReadlength.png
    rm -f 16/Yield_By_Length.png
    rm -f 17/LengthvsQualityScatterPlot_dot.png
    rm -f 18/LengthvsQualityScatterPlot_kde.png
    rm -f 19/Non_weightedHistogramReadlength.png
    rm -f 20/Non_weightedLogTransformed_HistogramReadlength.png
    rm -f 21/WeightedHistogramReadlength.png
    rm -f 22/WeightedLogTransformed_HistogramReadlength.png
    rm -f 23/Yield_By_Length.png
    rm -f 24/NanoStats.txt
    rm -f 25/LengthvsQualityScatterPlot_dot.html
    rm -f 26/LengthvsQualityScatterPlot_kde.html
    rm -f 27/NanoPlot-report.html
    rm -f 28/Non_weightedHistogramReadlength.html
    rm -f 29/Non_weightedLogTransformed_HistogramReadlength.html
    rm -f 30/WeightedHistogramReadlength.html
    rm -f 31/WeightedLogTransformed_HistogramReadlength.html
    rm -f 32/Yield_By_Length.html
    rm -f 33/software_versions_mqc.yml
    mkdir -p 1 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/NanoStats.txt 1/NanoStats.txt
    mkdir -p 2 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/LengthvsQualityScatterPlot_dot.html 2/LengthvsQualityScatterPlot_dot.html
    mkdir -p 3 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/LengthvsQualityScatterPlot_kde.html 3/LengthvsQualityScatterPlot_kde.html
    mkdir -p 4 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/NanoPlot-report.html 4/NanoPlot-report.html
    mkdir -p 5 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/Non_weightedHistogramReadlength.html 5/Non_weightedHistogramReadlength.html
    mkdir -p 6 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/Non_weightedLogTransformed_HistogramReadlength.html 6/Non_weightedLogTransformed_HistogramReadlength.html
    mkdir -p 7 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/WeightedHistogramReadlength.html 7/WeightedHistogramReadlength.html
    mkdir -p 8 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/WeightedLogTransformed_HistogramReadlength.html 8/WeightedLogTransformed_HistogramReadlength.html
    mkdir -p 9 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/Yield_By_Length.html 9/Yield_By_Length.html
    mkdir -p 10 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/LengthvsQualityScatterPlot_dot.png 10/LengthvsQualityScatterPlot_dot.png
    mkdir -p 11 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/LengthvsQualityScatterPlot_kde.png 11/LengthvsQualityScatterPlot_kde.png
    mkdir -p 12 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/Non_weightedHistogramReadlength.png 12/Non_weightedHistogramReadlength.png
    mkdir -p 13 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/Non_weightedLogTransformed_HistogramReadlength.png 13/Non_weightedLogTransformed_HistogramReadlength.png
    mkdir -p 14 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/WeightedHistogramReadlength.png 14/WeightedHistogramReadlength.png
    mkdir -p 15 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/WeightedLogTransformed_HistogramReadlength.png 15/WeightedLogTransformed_HistogramReadlength.png
    mkdir -p 16 && ln -s /home/sequser/amrnanopro/work/35/be1c9d95566cacd8b3503f5c421330/Yield_By_Length.png 16/Yield_By_Length.png
    mkdir -p 17 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/LengthvsQualityScatterPlot_dot.png 17/LengthvsQualityScatterPlot_dot.png
    mkdir -p 18 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/LengthvsQualityScatterPlot_kde.png 18/LengthvsQualityScatterPlot_kde.png
    mkdir -p 19 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/Non_weightedHistogramReadlength.png 19/Non_weightedHistogramReadlength.png
    mkdir -p 20 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/Non_weightedLogTransformed_HistogramReadlength.png 20/Non_weightedLogTransformed_HistogramReadlength.png
    mkdir -p 21 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/WeightedHistogramReadlength.png 21/WeightedHistogramReadlength.png
    mkdir -p 22 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/WeightedLogTransformed_HistogramReadlength.png 22/WeightedLogTransformed_HistogramReadlength.png
    mkdir -p 23 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/Yield_By_Length.png 23/Yield_By_Length.png
    mkdir -p 24 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/NanoStats.txt 24/NanoStats.txt
    mkdir -p 25 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/LengthvsQualityScatterPlot_dot.html 25/LengthvsQualityScatterPlot_dot.html
    mkdir -p 26 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/LengthvsQualityScatterPlot_kde.html 26/LengthvsQualityScatterPlot_kde.html
    mkdir -p 27 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/NanoPlot-report.html 27/NanoPlot-report.html
    mkdir -p 28 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/Non_weightedHistogramReadlength.html 28/Non_weightedHistogramReadlength.html
    mkdir -p 29 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/Non_weightedLogTransformed_HistogramReadlength.html 29/Non_weightedLogTransformed_HistogramReadlength.html
    mkdir -p 30 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/WeightedHistogramReadlength.html 30/WeightedHistogramReadlength.html
    mkdir -p 31 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/WeightedLogTransformed_HistogramReadlength.html 31/WeightedLogTransformed_HistogramReadlength.html
    mkdir -p 32 && ln -s /home/sequser/amrnanopro/work/be/7c44a0a20192fe1797c24bbfd77a95/Yield_By_Length.html 32/Yield_By_Length.html
    mkdir -p 33 && ln -s /home/sequser/amrnanopro/work/95/7667b39162b4ba2f2e7310ee226dda/software_versions_mqc.yml 33/software_versions_mqc.yml
}

nxf_unstage() {
    true
    [[ ${nxf_main_ret:=0} != 0 ]] && return
}

nxf_main() {
    trap on_exit EXIT
    trap on_term TERM INT USR2
    trap '' USR1

    [[ "${NXF_CHDIR:-}" ]] && cd "$NXF_CHDIR"
    export NXF_BOXID="nxf-$(dd bs=18 count=1 if=/dev/urandom 2>/dev/null | base64 | tr +/ 0A)"
    NXF_SCRATCH=''
    [[ $NXF_DEBUG > 0 ]] && nxf_env
    touch /home/sequser/amrnanopro/work/c8/86de949b8a1bcaaf994e13c2ce7265/.command.begin
    set +u
    set -u
    [[ $NXF_SCRATCH ]] && cd $NXF_SCRATCH
    nxf_stage

    set +e
    ctmp=$(set +u; nxf_mktemp /dev/shm 2>/dev/null || nxf_mktemp $TMPDIR)
    local cout=$ctmp/.command.out; mkfifo $cout
    local cerr=$ctmp/.command.err; mkfifo $cerr
    tee .command.out < $cout &
    tee1=$!
    tee .command.err < $cerr >&2 &
    tee2=$!
    ( nxf_launch ) >$cout 2>$cerr &
    pid=$!
    wait $pid || nxf_main_ret=$?
    wait $tee1 $tee2
    nxf_unstage
}

$NXF_ENTRY
