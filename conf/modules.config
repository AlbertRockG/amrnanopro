process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
}

// NANOPLOT
if (!params.skip_chopper) {
    process {
        withName: '.*:NANOPLOT_BEFORE_CHOPPER' {
            ext.args = '_before_chopper'
            publishDir = [
                path: { "${params.outdir}/${meta}/nanoplot/pre_trim/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    }
    // CHOPPER
    process {
        withName: 'CHOPPER' {
            ext {
                prefix = { "${meta}.trimmed" }
                args = '-f'
                args2 = '-q 10'
                args3 = '-9'
            }
            publishDir = [
                path: { "${params.outdir}/${meta}/chopper/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        }
    }
    // NANOPLOT
    process {
        withName: '.*:NANOPLOT_AFTER_CHOPPER' {
            ext.args = '_after_chopper'
            publishDir = [
                path: { "${params.outdir}/${meta}/nanoplot/post_trim/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        }
    }
} 

if (params.skip_chopper) {
    // NANOPLOT
    process {
        withName: '.*:NANOPLOT_WITHOUT_CHOPPER' {
            ext.args = ''
            publishDir = [
                path: { "${params.outdir}/${meta}/nanoplot/without_trim/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        }
    }
    
}

// MULTIQC
    process {
        withName: '.*:MULTIQC' {
            ext.args = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
            publishDir = [
                path: { "${params.outdir}/multiqc/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }

if (params.download_test_data) {
    process {
        withName: 'DOWNLOAD_TEST_DATA' {
            publishDir = [
                path: { "${params.outdir}/test_data/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}
